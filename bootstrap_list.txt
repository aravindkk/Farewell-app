Bootstrap learning:


1.)

If you don't want users to zoom their mobile site:

<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">

2.)

class: container
fixed width container: responsive

class: container-fluid
full width container, responsive.

3.) Always 12 columns. Even for nested rows.

    class: row
    class: col-md-3

    class: col-xs-3  
           col-sm-3
           col-md-3
           col-lg-3


4.) For the inmortant line, like a one liner.

    <p class="lead">This is what this news is all about.</p>

    Basically makes the para stand out.

5.) Use clearfix if you want to move content to next line in case of strange corner case.

    <div class="clearfix visible-xs-block"></div>


    eg can be seen in documentation.

6.) You can skip columns by using col-md-offset-3

    <div class="col-md-3 col-md-offset-3">.col-md-3 .col-md-offset-3</div>

7.) All headings <h1>, <h2>... automatically aczuire styles. No special class needs to be added.
    class: h1, h2, ., h6 when you want text to be inline, but match other font characteristics of a heading.

8.) For highlighting some part of text, wrap them in a <mark></mark>
    For corrected text(striked out), use <del></del>
    Other usuals are small, strong, em(italicized)

9.) If you text to not wrap to next line, use:
    class: text-nowrap
   
    And for usual alignment within columns, use:
    class: text-left, text-right, text-justify, text-center

10.) Some text transformation classes.
   
     class: text-lowercase, text-uppercase, text-capitalize

11.) To add a tooltip/abbreviation, use:
     <abbr title="this text shows on hover"></abbr>

     Bottomline: Does not look very pretty, avoid!

12.) If you put a email addresss(not recommended these days), then use:
  
     <a href="mailto:#">first.last@example.com</a> 

13.) The next one, looks kind of nice. This is for quoting stuff.

     <blockquote></blockquote>

     To add the souce of the quote/text, use:

     <blockquote>
      <p>Quote or text</p>
      <footer>This is from the <cite title="Harry Potter and the half blood prince">Harry Potter</cite></footer>
     </blockquote>

14.) Nothing special for lists, just use <ul>, <li>, <ol>.
     For showing a list of items on same line, use class: list-inline

15.) To show code which are only one line long, wrap in <code>. For multiple lines, use <pre>
     To show any keys that have to be pressed with keyboard, use <kbd>.

16.) For tables alone, it is needed to add the class "table" explicitly, as several other plugins affect tables, and we want to be sure our  style overrides them finally. Also, you can use class table-striped, which looks more fancy. table-hover is also really cool.
     Other class: table-bordered

     If the table is very long, then in movile you can add a horizontal scroll bar by class table-responsive


17.) Anything if you want to color code, these are the color codes:
     success : green
     warning : yellow
     danger  : red
     info    : blue

18.) For any form use, club elements of form into meaningful groups:
   
    <form>
      <div class="form-group">
      </div>
    </form>

    Always keep buttons outside of these form-groups.

    <form>
      <div class="form-group">
      </div>
      <button>
    </form>

     For any input element, use a label.

     <label for="abc">E-mail</label>
     <input type="text" id="abc" class="form-control" placeholder="E-mail"></input>

19.) For inline forms, like the ones you see for login in top right corners of some websites.

     <form class="form-inline">
     </form>

20.) In forms, to show some prefix or suffix, use "input-group-addon". This is really nice, use as follows:

     <div class="input-group">
       <div class="input-group-addon">$</div>
       <input type="text" placeholder="value" id="abc" class="form-control"></input>
     </div>

21.) Remember the classes col-md everything have meaning only when within a row class. Be careful! For forms only there is class "form-horizontal" which can mimick row class.


22.) class checkbox is to group checkboxes. To club checkboxes and radios just use same name value. And you can inline checkboxes inline using checkbox-inline.

23.) Drop down select fields:

     <select class="form-control">
      <option>1</option>
      <option>2</option>
      <option>3</option>
      <option>4</option>
      <option>5</option>
     </select>

24.) input fields can be disabled as follows:

     <input disabled></input>

     The above shows a cross symbol on hover.

     To show a readonly field, use:

     <input readonly></input>     

25.) Input validation:

     has-warning, has-error, has-success

     How to use?

26.) Control heights of input elements by classes: input-lg, input-sm, form-group=lg, form-group-sm

27.) Help text for forms:

     class: help-block

28.) Buttons: Use a, button, input elements
     use "a" element if  you want in-page navigation
     Recommend using button.

29.) Size of buttons:
     btn-sm, btn-lg, btn-xs

30.) To make a button disabled, add the disabled attribute as follows:

     <button disabled="disabled">Click me</button>

31.) For images use:
     
     <img src="..." class="img-responsive" alt="Responsive image">
    
     Additionally use these cute image classes: img-rounded, img-circle, img-thumbnail

32.) Change color of text easily via helper classes: text-info, text-success, text-primary, text-warning, text-muted, text-danger.

33.) Change the background of any element using these classes:
     bg-primary, bg-info, bg-warning, bg-success, bg-danger

34.) The close button: use with a modal:

     <button type="button" class="close" aria-label="Close"><span aria-hidden="true">&times;</span></button>

35.) Floating is done using pull-left, pull-right. 

36.) To show and hide content, use the classes show and hide. No need to use jquery.

37.) If you want to show content specific to screen sizes, these are real handy:

     visible-xs, visible-sm, visible-md, visible-lg, hidden-xs, hidden-sm, hidden-md, hidden-lg 

     Each of these should be written wit suffix of one of the following: block, inline, inline-block. For example, you can write:
     visible-xs-block
     